package fun.HydrogenDLC.client.module.impl.movement;

import fun.HydrogenDLC.api.event.impl.player.MotionEvent;
import fun.HydrogenDLC.api.event.impl.player.UpdateEvent;
import fun.HydrogenDLC.api.interfaces.event.Listener;
import fun.HydrogenDLC.client.module.api.Category;
import fun.HydrogenDLC.client.module.api.Module;
import fun.HydrogenDLC.client.module.api.ModuleInfo;
import fun.HydrogenDLC.impl.util.pattern.Singleton;
import fun.HydrogenDLC.impl.value.impl.BooleanValue;
import fun.HydrogenDLC.impl.value.impl.NumberValue;
import net.minecraft.network.play.server.SPlayerPositionLookPacket;

@ModuleInfo(name = "Airstuck", description = "Позволяет застрять в воздухе.", category = Category.MOVEMENT)
public class Airstuck extends Module {
    public static Singleton<Airstuck> singleton = Singleton.create(() -> Module.link(Airstuck.class));

    private final BooleanValue cancelMotion = new BooleanValue("Отменять движение", this, true);
    private final Listener<UpdateEvent> onUpdate = event -> {
        if (mc.player == null) return;

        // Cancel all movement
        mc.player.setVelocity(0, 0, 0);
        mc.player.fallDistance = 0;

        // Set position to specified height if not zero
        {
            mc.player.setPosition(mc.player.getPosX(),
                    mc.player.getPosY() ,
                    mc.player.getPosZ());
        }
    };

    private final Listener<MotionEvent> onMotion = event -> {
        if (cancelMotion.getValue()) {
            event.setX(0);
            event.setY(0);
            event.setZ(0);
        }
    };

    @Override
    protected void onEnable() {
        if (mc.player != null) {
            mc.player.setVelocity(0, 0, 0);
        }
    }

    @Override
    protected void onDisable() {
        if (mc.player != null) {
            // Reset motion when disabled
            mc.player.setVelocity(0, 0, 0);
        }
    }
}
